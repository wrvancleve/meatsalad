ClientEvents.lang('en_us', event => {
  // alexsmobs
  event.add('alexsmobs', 'item.alexsmobs.mimicream', 'Mystery Goo')

  // allthemodium
  //event.add('allthemodium', 'vibranium.other.loc', 'The Other: Any Biome (Y: 0 to 40)')
  //event.add('allthemodium', 'unobtainium.loc', 'The End: End Highlands Biome (Y: 8 to 376)')
  event.add('allthemodium', 'allthemodium.description', 'Palladium Nugget! The first step!(of many!)')
  event.add('allthemodium', 'material.allthemodium.allthemodium', 'Palladium')
  event.add('allthemodium', 'material.silentgear.allthemodium', 'Palladium')
  event.add('allthemodium', 'tetra.material.allthemodium', 'Palladium')
  event.add('allthemodium', 'stat.tconstruct.harvest_tier.allthemodium.allthemodium', 'Palladium')
  event.add('allthemodium', 'material.allthemodium.vibranium_allthemodium', 'Vibranium - Palladium Alloy')
  event.add('allthemodium', 'material.silentgear.vibranium_allthemodium', 'Vibranium - Palladium Alloy')
  event.add('allthemodium', 'material.allthemodium.unobtainium_allthemodium', 'Unobtainium - Palladium Alloy')
  event.add('allthemodium', 'material.silentgear.unobtainium_allthemodium', 'Unobtainium - Palladium Alloy')
  event.add('allthemodium', 'block.allthemodium.raw_allthemodium_block', 'Raw Palladium Block')
  event.add('allthemodium', 'item.allthemodium.allthemodium_pickaxe', 'Palladium Pickaxe')
  event.add('allthemodium', 'item.allthemodium.allthemodium_axe', 'Palladium Axe')
  event.add('allthemodium', 'item.allthemodium.allthemodium_shovel', 'Palladium Shovel')
  event.add('allthemodium', 'item.allthemodium.allthemodium_hoe', 'Palladium Hoe')
  event.add('allthemodium', 'item.allthemodium.allthemodium_sword', 'Palladium Sword')
  event.add('allthemodium', 'item.allthemodium.allthemodium_plate', 'Palladium Plate')
  event.add('allthemodium', 'item.allthemodium.allthemodium_rod', 'Palladium Rod')
  event.add('allthemodium', 'item.allthemodium.allthemodium_gear', 'Palladium Gear')
  event.add('allthemodium', 'item.allthemodium.raw_allthemodium', 'Raw Palladium Ore')
  event.add('allthemodium', 'item.allthemodium.allthemodium_apple', 'Palladium Apple')
  event.add('allthemodium', 'item.allthemodium.allthemodium_dust', 'Palladium Dust')
  event.add('allthemodium', 'item.allthemodium.allthemodium_nugget', 'Palladium Nugget')
  event.add('allthemodium', 'item.allthemodium.allthemodium_ingot', 'Palladium Ingot')
  event.add('allthemodium', 'item.allthemodium.allthemodium_carrot', 'Palladium Carrot')
  event.add('allthemodium', 'block.allthemodium.allthemodium_ore', 'Palladium Ore')
  event.add('allthemodium', 'block.allthemodium.allthemodium_slate_ore', 'Palladium Slate Ore')
  event.add('allthemodium', 'block.allthemodium.allthemodium_block', 'Palladium Block')
  event.add('allthemodium', 'item.allthemodium.allthemodium_helmet', 'Palladium Helmet')
  event.add('allthemodium', 'item.allthemodium.allthemodium_chestplate', 'Palladium Chestplate')
  event.add('allthemodium', 'item.allthemodium.allthemodium_leggings', 'Palladium Leggings')
  event.add('allthemodium', 'item.allthemodium.allthemodium_boots', 'Palladium Boots')
  event.add('allthemodium', 'item.allthemodium.crushed_allthemodium', 'Crushed Palladium')
  event.add('allthemodium', 'block.allthemodium.molten_allthemodium_block', 'Molten Palladium')
  event.add('allthemodium', 'fluid.allthemodium.molten_allthemodium', 'Molten Palladium')
  event.add('allthemodium', 'fluid.allthemodium.molten_atmvib', 'Vibranium-Palladium Alloy')
  event.add('allthemodium', 'fluid.allthemodium.molten_atmunob', 'Unobtainium-Palladium Alloy')
  event.add('allthemodium', 'slurry.allthemodium.dirty_allthemodium', 'Dirty Palladium Slurry')
  event.add('allthemodium', 'slurry.allthemodium.clean_allthemodium', 'Clean Palladium Slurry')
  event.add('allthemodium', 'block.allthemodium.unobtainium_allthemodium_alloy_block', 'Unobtainium - Palladium Alloy Block')
  event.add('allthemodium', 'block.allthemodium.vibranium_allthemodium_alloy_block', 'Vibranium - Palladium Alloy Block')
  event.add('allthemodium', 'item.allthemodium.unobtainium_allthemodium_alloy_dust', 'Unobtainium - Palladium Alloy Dust')
  event.add('allthemodium', 'item.allthemodium.vibranium_allthemodium_alloy_dust', 'Vibranium - Palladium Alloy Dust')
  event.add('allthemodium', 'item.allthemodium.unobtainium_allthemodium_alloy_ingot', 'Unobtainium - Palladium Alloy Ingot')
  event.add('allthemodium', 'item.allthemodium.vibranium_allthemodium_alloy_ingot', 'Vibranium - Palladium Alloy Ingot')
  event.add('allthemodium', 'item.allthemodium.allthemodium_clump', 'Palladium Clump')
  event.add('allthemodium', 'item.allthemodium.allthemodium_shard', 'Palladium Shard')
  event.add('allthemodium', 'item.allthemodium.allthemodium_crystal', 'Palladium Crystal')
  event.add('allthemodium', 'item.allthemodium.dirty_allthemodium_dust', 'Dirty Palladium Dust')
  event.add('allthemodium', 'item.allthemodium.molten_allthemodium_bucket', 'Molten Palladium Bucket')
  event.add('allthemodium', 'item.allthemodium.vapor_allthemodium_bucket', 'Palladium Vapor Bucket')
  event.add('allthemodium', 'fluid.allthemodium.vapor_allthemodium', 'Palladium Vapor')
  event.add('allthemodium', 'block.iceandfire.allthemodium_pile', 'Palladium Nugget Pile')

  // apotheosis
  event.add('apotheosis', 'affix.apotheosis:heavy_weapon/attribute/experienced', 'Experienced')
  event.add('apotheosis', 'affix.apotheosis:heavy_weapon/attribute/experienced.suffix', 'of the Scholar')
  event.add('apotheosis', 'affix.apotheosis:sword/attribute/experienced', 'Experienced')
  event.add('apotheosis', 'affix.apotheosis:sword/attribute/experienced.suffix', 'of the Scholar')

  // cataclysm
  event.add('cataclysm', "item.cataclysm.nameless_sorcerer_spawn_egg", "Nameless Sorcerer Spawn Egg")
  event.add('cataclysm', "entity.cataclysm.nameless_sorcerer", "Nameless Sorcerer")

  // endrem
  event.add('endrem', 'item.endrem.old_eye.description', '§7§oLegends say this eye once belonged to ancient builders who succumbed to a terrible virus')

  // hostilenetworks
  event.add('hostilenetworks', 'hostilenetworks.trivia.crimson_mosquito', 'Hideous, mutant flying insect')
  event.add('hostilenetworks', 'hostilenetworks.trivia.dropbear', 'Demonic-looking marsupial')
  event.add('hostilenetworks', 'hostilenetworks.trivia.farseer', 'Being from beyond dimensions')
  event.add('hostilenetworks', 'hostilenetworks.trivia.ignis', 'Knight of the Burning Arena')
  event.add('hostilenetworks', 'hostilenetworks.trivia.mimicube', 'Relatives of the slimes of the Overworld and the Magma Cubes of the Nether')
  event.add('hostilenetworks', 'hostilenetworks.trivia.rocky_roller', 'Giant monster suited with a shell covered in pointed dripstone')
  event.add('hostilenetworks', 'hostilenetworks.trivia.skreecher', 'Strange hideously-mutated primate')
  event.add('hostilenetworks', 'hostilenetworks.trivia.soul_vulture', 'Withered remains of long dead birds')
  event.add('hostilenetworks', 'hostilenetworks.trivia.straddler', 'Giant relatives of the common Strider of the Nether')
  event.add('hostilenetworks', 'hostilenetworks.trivia.void_worm', 'Interdimensional parasite that tunnels through reality')
  event.add('hostilenetworks', 'hostilenetworks.trivia.ender_guardian', 'Guardian of the Ruined Citadel')
  event.add('hostilenetworks', 'hostilenetworks.trivia.the_leviathan', 'Serpent of the Sunken City')
  
  // iron_spellbooks
  event.add('irons_spellbooks', 'item.irons_spellbooks.dragonskin_spell_book', 'Dragon Scale Spell Book')

  // meatsalad
  event.add('meatsalad', 'advancements.the_other.description', 'Enter the Other dimension')
  event.add('meatsalad', 'advancements.the_other.title', 'Welcome to the other side!')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/mana_regen', 'Regenerative')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/mana_regen.suffix', 'of Regeneration')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_blood', 'Sanguine')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_blood.suffix', 'of The Sire')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_ender', 'Ender')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_ender.suffix', 'of The End')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_evocation', 'Exile\'s')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_evocation.suffix', 'of The Arch-Illager')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_fire', 'Nethermancer\'s')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_fire.suffix', 'of The Nether')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_lightning', 'Aethermancer\'s')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_lightning.suffix', 'of The Storm Eater')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_nature', 'Druid\'s')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_nature.suffix', 'of Feral Wilds')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/summon', 'Necromantic')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/summon.suffix', 'of The Summoner')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_holy', 'Holy')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_holy.suffix', 'of Radiance')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_ice', 'Cryomancer\'s')
  event.add('meatsalad', 'affix.meatsalad:spellbook/attribute/power_ice.suffix', 'of The Arctic')
  event.add('meatsalad', 'meatsalad.basalz_gate', 'Basalz Gate')
  event.add('meatsalad', 'meatsalad.basalz_gate_large', 'Large Basalz Gate')
  event.add('meatsalad', 'meatsalad.blitz_gate', 'Blitz Gate')
  event.add('meatsalad', 'meatsalad.blitz_gate_large', 'Large Blitz Gate')
  event.add('meatsalad', 'meatsalad.blizz_gate', 'Blizz Gate')
  event.add('meatsalad', 'meatsalad.blizz_gate_large', 'Large Blizz Gate')
  event.add('meatsalad', 'meatsalad.nether_gate', 'Nether Gate')
  event.add('meatsalad', 'meatsalad.supreme_ender_guardian_gate', '§kSupreme§r Gate')
  event.add('meatsalad', 'meatsalad.supreme_gate', '§kSupreme§r Gate')
  event.add('meatsalad', 'meatsalad.supreme_ignis_gate', '§kSupreme§r Gate')
  event.add('meatsalad', 'meatsalad.wither_skeleton_gate', 'Wither Skeleton Gate')
  event.add('meatsalad', 'meatsalad.wither_skeleton_gate_large', 'Large Wither Skeleton Gate')

  // mekanism
  event.add('mekanism', 'infuse_type.kubejs.dimensional_shard', "Dimensional Shard")
  global.mekStackAdditions.forEach(entry => {
    event.add('mekanism', `slurry.kubejs.clean_${entry.material}`, snakeCaseToUpperCase(`clean_${entry.material}_slurry`))
    event.add('mekanism', `slurry.kubejs.dirty_${entry.material}`, snakeCaseToUpperCase(`dirty_${entry.material}_slurry`))
    /*
    mekItems.forEach(type => {
      event.add('mekanism', `item.kubejs.${type}_${entry.material}`, snakeCaseToUpperCase(`${entry.material}_${type}`))
    })
    if (entry.makeDust) {
      event.add('mekanism', `item.kubejs.dust_${entry.material}`, snakeCaseToUpperCase(`${entry.material}_dust`))
    }
    */
  })

  // silentgear
  event.add('silentgear', 'material.silentgear.adamantite', 'Adamantite')
  event.add('silentgear', 'material.silentgear.certus_quartz', 'Certus Quartz')
  event.add('silentgear', 'material.silentgear.charged_certus_quartz', 'Charged Certus Quartz')
  event.add('silentgear', 'material.silentgear.dragon_scale', 'Dragon Scale')
  event.add('silentgear', 'material.silentgear.echo', 'Echo')
  event.add('silentgear', 'material.silentgear.infinity', 'Infinity')
  event.add('silentgear', 'material.silentgear.mystery_goo', 'Mystery Goo')
  event.add('silentgear', 'material.silentgear.mythril', 'Mythril')
  event.add('silentgear', 'material.silentgear.palladium', 'Palladium')
  event.add('silentgear', 'material.silentgear.peridot', 'Peridot')
  event.add('silentgear', 'material.silentgear.plutonium', 'Plutonium')
  event.add('silentgear', 'material.silentgear.polonium', 'Polonium')
  event.add('silentgear', 'material.silentgear.ruby', 'Ruby')
  event.add('silentgear', 'material.silentgear.sapphire', 'Sapphire')
  //event.add('silentgear', 'material.silentgear.ultima', 'Ultima')
  event.add('silentgear', 'material.silentgear.unobtainium', 'Unobtainium')
  event.add('silentgear', 'material.silentgear.vibranium', 'Vibranium')
  event.add('silentgear', 'material.silentgear.vulcanite', 'Vulcanite')
})

function snakeCaseToUpperCase(input) {
  return String(input)
    .split("_")
    .map((word) => `${word[0].toUpperCase()}${word.slice(1)}`)
    .join(" ");
}
